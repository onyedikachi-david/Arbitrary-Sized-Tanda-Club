(set-option :print-success true )
(set-option :produce-models true )
(set-logic ALL )
(define-sort UInt () Int )
(declare-fun UInt_lsh (UInt UInt ) UInt )
(declare-fun UInt_rsh (UInt UInt ) UInt )
(declare-fun UInt_band (UInt UInt ) UInt )
(declare-fun UInt_bior (UInt UInt ) UInt )
(declare-fun UInt_bxor (UInt UInt ) UInt )
(declare-fun UInt_sqrt (UInt ) UInt )
(declare-sort Bytes 0 )
(declare-fun bytes0 () Bytes )
(declare-fun bytes (Int ) Bytes )
(define-fun Bytes_toBytes ((b Bytes ) ) Bytes b )
(declare-fun Bytes_xor (Bytes Bytes ) Bytes )
(declare-fun btoiLast8 (Bytes ) UInt )
(declare-fun bytesAppend (Bytes Bytes ) Bytes )
(declare-sort Digest 0 )
(declare-fun digest (Bytes ) Digest )
(declare-fun Digest_toBytes (Digest ) Bytes )
(declare-fun Digest_xor (Digest Digest ) Digest )
(declare-fun dtoiLast8 (Digest ) UInt )
(declare-sort Null 0 )
(declare-fun null () Null )
(define-fun Null_toBytes ((n Null ) ) Bytes bytes0 )
(declare-fun Bool_toBytes (Bool ) Bytes )
(declare-fun UInt_toBytes (UInt ) Bytes )
(declare-sort Address 0 )
(declare-fun Address_toBytes (Address ) Bytes )
(declare-sort Token 0 )
(declare-fun Token_toBytes (Token ) Bytes )
(declare-sort Contract 0 )
(declare-fun Contract_toBytes (Contract ) Bytes )
(declare-fun Contract_addressEq (Contract Address ) Bool )
(push 1 ) ;; {
  (declare-datatype T1 ((T1_cons (T1_elem0 UInt ) (T1_elem1 UInt ) (T1_elem2 Bool ) ) ) )
  (declare-fun T1_toBytes (T1 ) Bytes )
  (define-sort T0 () (Array Int T1 ) )
  (declare-fun z_T0 () T0 )
  (define-fun T0_cons () T0 z_T0 )
  (declare-fun T0_toBytes (T0 ) Bytes )
  (declare-datatype T2 ((T2_cons ) ) )
  (declare-fun T2_toBytes (T2 ) Bytes )
  (declare-datatype T3 ((T3_cons (T3_contributionAmt UInt ) (T3_duration UInt ) (T3_maxUsers UInt ) (T3_penaltyAmt UInt ) (T3_poolDescription Bytes ) (T3_poolName Bytes ) ) ) )
  (declare-fun T3_toBytes (T3 ) Bytes )
  (declare-datatype T4 ((T4_Contribution (T4_Contribution_v Null ) ) (T4_Finished (T4_Finished_v Null ) ) (T4_Payment (T4_Payment_v Null ) ) (T4_Registration (T4_Registration_v Null ) ) ) )
  (declare-fun T4_toBytes (T4 ) Bytes )
  (define-fun T4_inv ((x T4 ) ) Bool (match x (((T4_Contribution x ) true ) ((T4_Finished x ) true ) ((T4_Payment x ) true ) ((T4_Registration x ) true ) ) ) )
  (declare-datatype T5 ((T5_None (T5_None_v Null ) ) (T5_Some (T5_Some_v Null ) ) ) )
  (declare-fun T5_toBytes (T5 ) Bytes )
  (define-fun T5_inv ((x T5 ) ) Bool (match x (((T5_None x ) true ) ((T5_Some x ) true ) ) ) )
  (declare-fun map0_0 () (Array Address T5 ) )
  (assert (= map0_0 ((as const (Array Address T5 ) ) (T5_None null ) ) ) )
  (declare-fun map1_0 () (Array Address T5 ) )
  (assert (= map1_0 ((as const (Array Address T5 ) ) (T5_None null ) ) ) )
  (declare-fun map2_0 () (Array Address T5 ) )
  (assert (= map2_0 ((as const (Array Address T5 ) ) (T5_None null ) ) ) )
  (declare-fun dlc_UInt_max () UInt )
  (assert (<= 0 dlc_UInt_max ) )
  (declare-fun dlc_Token_zero () Token )
  (assert true )
  (declare-fun address_Any_contribute () Address )
  (assert true )
  (declare-fun address_Any_requestPayment () Address )
  (assert true )
  (declare-fun address_Contributor_register () Address )
  (assert true )
  (declare-fun address_PoolCreator () Address )
  (assert true )
  (declare-fun interact_PoolCreator_getPoolDetails () T3 )
  (assert (and (<= 0 (T3_contributionAmt interact_PoolCreator_getPoolDetails ) ) (<= 0 (T3_duration interact_PoolCreator_getPoolDetails ) ) (<= 0 (T3_maxUsers interact_PoolCreator_getPoolDetails ) ) (<= 0 (T3_penaltyAmt interact_PoolCreator_getPoolDetails ) ) true true ) )
  (push 1 ) ;; {
    (declare-fun v524 () Address )
    (assert true )
    (declare-fun v525 () Address )
    (assert true )
    (declare-fun v526 () Address )
    (assert true )
    (declare-fun v527 () Address )
    (assert true )
    (declare-fun v321 () T0 )
    (assert true )
    (assert (= v321 T0_cons ) )
    (declare-fun v325 () T3 )
    (assert (and (<= 0 (T3_contributionAmt v325 ) ) (<= 0 (T3_duration v325 ) ) (<= 0 (T3_maxUsers v325 ) ) (<= 0 (T3_penaltyAmt v325 ) ) true true ) )
    (declare-fun v326 () UInt )
    (assert (<= 0 v326 ) )
    (assert (<= v326 dlc_UInt_max ) )
    (assert (= v326 (T3_contributionAmt v325 ) ) )
    (declare-fun v329 () UInt )
    (assert (<= 0 v329 ) )
    (assert (<= v329 dlc_UInt_max ) )
    (assert (= v329 (T3_penaltyAmt v325 ) ) )
    (declare-fun v336 () UInt )
    (assert (<= 0 v336 ) )
    (assert (<= v336 dlc_UInt_max ) )
    (assert (= v336 (div v326 2 ) ) )
    (declare-fun v338 () Bool )
    (assert true )
    (assert (= v338 (= v329 v336 ) ) )
    (assert v338 )
    (declare-fun v340 () Bool )
    (assert true )
    (assert (= v340 (> v326 0 ) ) )
    (assert v340 )
    (push 1 ) ;; {
      (pop 1 ) ;; }
    (push 1 ) ;; {
      (declare-fun v341 () Address )
      (assert true )
      (assert (= v341 address_PoolCreator ) )
      (declare-fun v342 () T3 )
      (assert (and (<= 0 (T3_contributionAmt v342 ) ) (<= 0 (T3_duration v342 ) ) (<= 0 (T3_maxUsers v342 ) ) (<= 0 (T3_penaltyAmt v342 ) ) true true ) )
      (assert (= v342 v325 ) )
      (declare-fun pv_net528 () UInt )
      (assert (<= 0 pv_net528 ) )
      (declare-fun pv_tok530 () Token )
      (assert true )
      (declare-fun pv_ks529 () (Array Token UInt ) )
      (assert (<= 0 (select pv_ks529 pv_tok530 ) ) )
      (assert (= pv_net528 0 ) )
      (declare-fun v531 () Address )
      (assert true )
      (declare-fun v532 () Address )
      (assert true )
      (declare-fun v533 () Address )
      (assert true )
      (declare-fun v534 () Address )
      (assert true )
      (declare-fun v343 () UInt )
      (assert (<= 0 v343 ) )
      (declare-fun v344 () UInt )
      (assert (<= 0 v344 ) )
      (declare-fun v40 () Bool )
      (assert true )
      (assert (= v343 0 ) )
      (assert (= v344 0 ) )
      (push 1 ) ;; {
        (assert (not (= 0 pv_net528 ) ) )
        (check-sat-using (try-for default 10 ) )
        ;; unknown
        (pop 1 ) ;; }
      (assert (= 0 pv_net528 ) )
      (declare-fun v345 () UInt )
      (assert (<= 0 v345 ) )
      (assert (<= v345 dlc_UInt_max ) )
      (assert (= v345 (T3_contributionAmt v342 ) ) )
      (declare-fun v346 () UInt )
      (assert (<= 0 v346 ) )
      (assert (<= v346 dlc_UInt_max ) )
      (assert (= v346 (T3_duration v342 ) ) )
      (declare-fun v347 () UInt )
      (assert (<= 0 v347 ) )
      (assert (<= v347 dlc_UInt_max ) )
      (assert (= v347 (T3_maxUsers v342 ) ) )
      (declare-fun v348 () UInt )
      (assert (<= 0 v348 ) )
      (assert (<= v348 dlc_UInt_max ) )
      (assert (= v348 (T3_penaltyAmt v342 ) ) )
      (push 1 ) ;; {
        (declare-fun v535 () Address )
        (assert true )
        (declare-fun v536 () Address )
        (assert true )
        (declare-fun v537 () Address )
        (assert true )
        (declare-fun v538 () Address )
        (assert true )
        (pop 1 ) ;; }
      (declare-fun v353 () UInt )
      (assert (<= 0 v353 ) )
      (assert (<= v353 dlc_UInt_max ) )
      (assert (= v353 (div v345 2 ) ) )
      (declare-fun v355 () Bool )
      (assert true )
      (assert (= v355 (= v348 v353 ) ) )
      (push 1 ) ;; {
        (assert (not v355 ) )
        (check-sat-using (try-for default 10 ) )
        ;; unsat
        (pop 1 ) ;; }
      (assert v355 )
      (declare-fun v357 () Bool )
      (assert true )
      (assert (= v357 (> v345 0 ) ) )
      (push 1 ) ;; {
        (assert (not v357 ) )
        (check-sat-using (try-for default 10 ) )
        ;; unsat
        (pop 1 ) ;; }
      (assert v357 )
      (declare-fun v362 () UInt )
      (assert (<= 0 v362 ) )
      (assert (<= v362 dlc_UInt_max ) )
      (assert (= v362 (+ v345 v348 ) ) )
      (push 1 ) ;; {
        (pop 1 ) ;; }
      (push 1 ) ;; {
        (declare-fun v363 () Address )
        (assert true )
        (assert (= v363 address_PoolCreator ) )
        (declare-fun pv_net539 () UInt )
        (assert (<= 0 pv_net539 ) )
        (declare-fun pv_tok541 () Token )
        (assert true )
        (declare-fun pv_ks540 () (Array Token UInt ) )
        (assert (<= 0 (select pv_ks540 pv_tok541 ) ) )
        (assert (= pv_net539 v362 ) )
        (declare-fun v542 () Address )
        (assert true )
        (declare-fun v543 () Address )
        (assert true )
        (declare-fun v544 () Address )
        (assert true )
        (declare-fun v545 () Address )
        (assert true )
        (declare-fun v364 () UInt )
        (assert (<= 0 v364 ) )
        (declare-fun v365 () UInt )
        (assert (<= 0 v365 ) )
        (declare-fun v65 () Bool )
        (assert true )
        (assert (= v364 (+ v343 1 ) ) )
        (assert (>= v365 v344 ) )
        (push 1 ) ;; {
          (assert (not (= v362 pv_net539 ) ) )
          (check-sat-using (try-for default 10 ) )
          ;; unsat
          (pop 1 ) ;; }
        (assert (= v362 pv_net539 ) )
        (declare-fun v368 () Bool )
        (assert true )
        (assert (= v368 (= v341 v363 ) ) )
        (push 1 ) ;; {
          (assert (not v368 ) )
          (check-sat-using (try-for default 10 ) )
          ;; unsat
          (pop 1 ) ;; }
        (assert v368 )
        (push 1 ) ;; {
          (pop 1 ) ;; }
        (push 1 ) ;; {
          (declare-fun v370 () Address )
          (assert true )
          (assert (= v370 address_PoolCreator ) )
          (declare-fun pv_net546 () UInt )
          (assert (<= 0 pv_net546 ) )
          (declare-fun pv_tok548 () Token )
          (assert true )
          (declare-fun pv_ks547 () (Array Token UInt ) )
          (assert (<= 0 (select pv_ks547 pv_tok548 ) ) )
          (assert (= pv_net546 0 ) )
          (declare-fun v549 () Address )
          (assert true )
          (declare-fun v550 () Address )
          (assert true )
          (declare-fun v551 () Address )
          (assert true )
          (declare-fun v552 () Address )
          (assert true )
          (declare-fun v371 () UInt )
          (assert (<= 0 v371 ) )
          (declare-fun v372 () UInt )
          (assert (<= 0 v372 ) )
          (declare-fun v74 () Bool )
          (assert true )
          (assert (= v371 (+ v364 1 ) ) )
          (assert (>= v372 v365 ) )
          (push 1 ) ;; {
            (assert (not (= 0 pv_net546 ) ) )
            (check-sat-using (try-for default 10 ) )
            ;; unsat
            (pop 1 ) ;; }
          (assert (= 0 pv_net546 ) )
          (declare-fun v373 () Bool )
          (assert true )
          (assert (= v373 (= v341 v370 ) ) )
          (push 1 ) ;; {
            (assert (not v373 ) )
            (check-sat-using (try-for default 10 ) )
            ;; unsat
            (pop 1 ) ;; }
          (assert v373 )
          (declare-fun v374 () T4 )
          (assert (T4_inv v374 ) )
          (assert (= v374 (T4_Registration null ) ) )
          (push 1 ) ;; {
            (push 1 ) ;; {
              (declare-fun v375 () UInt )
              (assert (<= 0 v375 ) )
              (assert (<= v375 dlc_UInt_max ) )
              (assert (= v375 0 ) )
              (declare-fun v376 () UInt )
              (assert (<= 0 v376 ) )
              (assert (<= v376 dlc_UInt_max ) )
              (assert (= v376 v371 ) )
              (declare-fun v377 () UInt )
              (assert (<= 0 v377 ) )
              (assert (<= v377 dlc_UInt_max ) )
              (assert (= v377 v364 ) )
              (declare-fun v378 () UInt )
              (assert (<= 0 v378 ) )
              (assert (<= v378 dlc_UInt_max ) )
              (assert (= v378 v364 ) )
              (declare-fun v379 () UInt )
              (assert (<= 0 v379 ) )
              (assert (<= v379 dlc_UInt_max ) )
              (assert (= v379 v372 ) )
              (declare-fun v380 () UInt )
              (assert (<= 0 v380 ) )
              (assert (<= v380 dlc_UInt_max ) )
              (assert (= v380 v365 ) )
              (declare-fun v381 () UInt )
              (assert (<= 0 v381 ) )
              (assert (<= v381 dlc_UInt_max ) )
              (assert (= v381 v365 ) )
              (declare-fun v382 () T0 )
              (assert true )
              (assert (= v382 v321 ) )
              (declare-fun v383 () UInt )
              (assert (<= 0 v383 ) )
              (assert (<= v383 dlc_UInt_max ) )
              (assert (= v383 v362 ) )
              (declare-fun v384 () Bool )
              (assert true )
              (assert (= v384 (>= v375 0 ) ) )
              (push 1 ) ;; {
                (assert (not v384 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun map0_1 () (Array Address T5 ) )
            (declare-fun map1_1 () (Array Address T5 ) )
            (declare-fun map2_1 () (Array Address T5 ) )
            (declare-fun v375 () UInt )
            (assert (<= 0 v375 ) )
            (assert (<= v375 dlc_UInt_max ) )
            (declare-fun v376 () UInt )
            (assert (<= 0 v376 ) )
            (assert (<= v376 dlc_UInt_max ) )
            (declare-fun v377 () UInt )
            (assert (<= 0 v377 ) )
            (assert (<= v377 dlc_UInt_max ) )
            (declare-fun v378 () UInt )
            (assert (<= 0 v378 ) )
            (assert (<= v378 dlc_UInt_max ) )
            (declare-fun v379 () UInt )
            (assert (<= 0 v379 ) )
            (assert (<= v379 dlc_UInt_max ) )
            (declare-fun v380 () UInt )
            (assert (<= 0 v380 ) )
            (assert (<= v380 dlc_UInt_max ) )
            (declare-fun v381 () UInt )
            (assert (<= 0 v381 ) )
            (assert (<= v381 dlc_UInt_max ) )
            (declare-fun v382 () T0 )
            (assert true )
            (declare-fun v383 () UInt )
            (assert (<= 0 v383 ) )
            (assert (<= v383 dlc_UInt_max ) )
            (declare-fun v384 () Bool )
            (assert true )
            (assert (= v384 (>= v375 0 ) ) )
            (assert v384 )
            (declare-fun v385 () Bool )
            (assert true )
            (assert (= v385 (<= v375 v347 ) ) )
            (assert v385 )
            (declare-fun v386 () Address )
            (assert true )
            (assert (= v386 v551 ) )
            (declare-fun v388 () T2 )
            (assert true )
            (declare-fun v390 () T5 )
            (assert (T5_inv v390 ) )
            (assert (= v390 (select map0_1 v386 ) ) )
            (declare-fun v391 () Bool )
            (assert true )
            (declare-fun v392 () Null )
            (assert true )
            (assert (=> (= v390 (T5_None v392 ) ) (= v391 false ) ) )
            (declare-fun v393 () Null )
            (assert true )
            (assert (=> (= v390 (T5_Some v393 ) ) (= v391 true ) ) )
            (assert (or (= v390 (T5_None v392 ) ) (= v390 (T5_Some v393 ) ) ) )
            (declare-fun v394 () Bool )
            (assert true )
            (assert (= v394 (ite v391 false true ) ) )
            (assert v394 )
            (push 1 ) ;; {
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v396 () Address )
              (assert true )
              (assert (= v396 v551 ) )
              (declare-fun v397 () T2 )
              (assert true )
              (assert (= v397 v388 ) )
              (declare-fun pv_net556 () UInt )
              (assert (<= 0 pv_net556 ) )
              (declare-fun pv_tok558 () Token )
              (assert true )
              (declare-fun pv_ks557 () (Array Token UInt ) )
              (assert (<= 0 (select pv_ks557 pv_tok558 ) ) )
              (assert (= pv_net556 v348 ) )
              (declare-fun v559 () Address )
              (assert true )
              (declare-fun v560 () Address )
              (assert true )
              (declare-fun v561 () Address )
              (assert true )
              (declare-fun v562 () Address )
              (assert true )
              (declare-fun v398 () UInt )
              (assert (<= 0 v398 ) )
              (declare-fun v399 () UInt )
              (assert (<= 0 v399 ) )
              (declare-fun v131 () Bool )
              (assert true )
              (assert (= v398 (+ v376 1 ) ) )
              (assert (>= v399 v379 ) )
              (declare-fun v402 () UInt )
              (assert (<= 0 v402 ) )
              (assert (<= v402 dlc_UInt_max ) )
              (assert (= v402 (+ v383 v348 ) ) )
              (push 1 ) ;; {
                (assert (not (= v348 pv_net556 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= v348 pv_net556 ) )
              (declare-fun map0_2 () (Array Address T5 ) )
              (assert (= map0_2 (store map0_1 v396 (T5_Some null ) ) ) )
              (declare-fun v404 () Null )
              (assert true )
              (assert (= v404 null ) )
              (declare-fun v405 () Null )
              (assert true )
              (assert (= v405 v404 ) )
              (declare-fun v410 () UInt )
              (assert (<= 0 v410 ) )
              (assert (<= v410 dlc_UInt_max ) )
              (assert (= v410 (+ v375 1 ) ) )
              (push 1 ) ;; {
                (declare-fun v564 () UInt )
                (assert (<= 0 v564 ) )
                (assert (<= v564 dlc_UInt_max ) )
                (assert (= v564 v410 ) )
                (declare-fun v565 () UInt )
                (assert (<= 0 v565 ) )
                (assert (<= v565 dlc_UInt_max ) )
                (assert (= v565 v398 ) )
                (declare-fun v566 () UInt )
                (assert (<= 0 v566 ) )
                (assert (<= v566 dlc_UInt_max ) )
                (assert (= v566 v376 ) )
                (declare-fun v567 () UInt )
                (assert (<= 0 v567 ) )
                (assert (<= v567 dlc_UInt_max ) )
                (assert (= v567 v376 ) )
                (declare-fun v568 () UInt )
                (assert (<= 0 v568 ) )
                (assert (<= v568 dlc_UInt_max ) )
                (assert (= v568 v399 ) )
                (declare-fun v569 () UInt )
                (assert (<= 0 v569 ) )
                (assert (<= v569 dlc_UInt_max ) )
                (assert (= v569 v379 ) )
                (declare-fun v570 () UInt )
                (assert (<= 0 v570 ) )
                (assert (<= v570 dlc_UInt_max ) )
                (assert (= v570 v379 ) )
                (declare-fun v571 () T0 )
                (assert true )
                (assert (= v571 v382 ) )
                (declare-fun v572 () UInt )
                (assert (<= 0 v572 ) )
                (assert (<= v572 dlc_UInt_max ) )
                (assert (= v572 v402 ) )
                (declare-fun v573 () Bool )
                (assert true )
                (assert (= v573 (>= v564 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v573 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun map0_1 () (Array Address T5 ) )
            (declare-fun map1_1 () (Array Address T5 ) )
            (declare-fun map2_1 () (Array Address T5 ) )
            (declare-fun v375 () UInt )
            (assert (<= 0 v375 ) )
            (assert (<= v375 dlc_UInt_max ) )
            (declare-fun v376 () UInt )
            (assert (<= 0 v376 ) )
            (assert (<= v376 dlc_UInt_max ) )
            (declare-fun v377 () UInt )
            (assert (<= 0 v377 ) )
            (assert (<= v377 dlc_UInt_max ) )
            (declare-fun v378 () UInt )
            (assert (<= 0 v378 ) )
            (assert (<= v378 dlc_UInt_max ) )
            (declare-fun v379 () UInt )
            (assert (<= 0 v379 ) )
            (assert (<= v379 dlc_UInt_max ) )
            (declare-fun v380 () UInt )
            (assert (<= 0 v380 ) )
            (assert (<= v380 dlc_UInt_max ) )
            (declare-fun v381 () UInt )
            (assert (<= 0 v381 ) )
            (assert (<= v381 dlc_UInt_max ) )
            (declare-fun v382 () T0 )
            (assert true )
            (declare-fun v383 () UInt )
            (assert (<= 0 v383 ) )
            (assert (<= v383 dlc_UInt_max ) )
            (declare-fun v384 () Bool )
            (assert true )
            (assert (= v384 (>= v375 0 ) ) )
            (assert v384 )
            (declare-fun v385 () Bool )
            (assert true )
            (assert (= v385 (<= v375 v347 ) ) )
            (assert (not v385 ) )
            (push 1 ) ;; {
              (push 1 ) ;; {
                (declare-fun v412 () UInt )
                (assert (<= 0 v412 ) )
                (assert (<= v412 dlc_UInt_max ) )
                (assert (= v412 0 ) )
                (declare-fun v413 () UInt )
                (assert (<= 0 v413 ) )
                (assert (<= v413 dlc_UInt_max ) )
                (assert (= v413 0 ) )
                (declare-fun v414 () UInt )
                (assert (<= 0 v414 ) )
                (assert (<= v414 dlc_UInt_max ) )
                (assert (= v414 v376 ) )
                (declare-fun v415 () UInt )
                (assert (<= 0 v415 ) )
                (assert (<= v415 dlc_UInt_max ) )
                (assert (= v415 v377 ) )
                (declare-fun v416 () UInt )
                (assert (<= 0 v416 ) )
                (assert (<= v416 dlc_UInt_max ) )
                (assert (= v416 v378 ) )
                (declare-fun v417 () UInt )
                (assert (<= 0 v417 ) )
                (assert (<= v417 dlc_UInt_max ) )
                (assert (= v417 v379 ) )
                (declare-fun v418 () UInt )
                (assert (<= 0 v418 ) )
                (assert (<= v418 dlc_UInt_max ) )
                (assert (= v418 v380 ) )
                (declare-fun v419 () UInt )
                (assert (<= 0 v419 ) )
                (assert (<= v419 dlc_UInt_max ) )
                (assert (= v419 v381 ) )
                (declare-fun v420 () T0 )
                (assert true )
                (assert (= v420 v382 ) )
                (declare-fun v421 () UInt )
                (assert (<= 0 v421 ) )
                (assert (<= v421 dlc_UInt_max ) )
                (assert (= v421 v383 ) )
                (declare-fun v422 () Bool )
                (assert true )
                (assert (= v422 (<= v413 v412 ) ) )
                (push 1 ) ;; {
                  (assert (not v422 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun map0_2 () (Array Address T5 ) )
              (declare-fun map1_2 () (Array Address T5 ) )
              (declare-fun map2_2 () (Array Address T5 ) )
              (declare-fun v412 () UInt )
              (assert (<= 0 v412 ) )
              (assert (<= v412 dlc_UInt_max ) )
              (declare-fun v413 () UInt )
              (assert (<= 0 v413 ) )
              (assert (<= v413 dlc_UInt_max ) )
              (declare-fun v414 () UInt )
              (assert (<= 0 v414 ) )
              (assert (<= v414 dlc_UInt_max ) )
              (declare-fun v415 () UInt )
              (assert (<= 0 v415 ) )
              (assert (<= v415 dlc_UInt_max ) )
              (declare-fun v416 () UInt )
              (assert (<= 0 v416 ) )
              (assert (<= v416 dlc_UInt_max ) )
              (declare-fun v417 () UInt )
              (assert (<= 0 v417 ) )
              (assert (<= v417 dlc_UInt_max ) )
              (declare-fun v418 () UInt )
              (assert (<= 0 v418 ) )
              (assert (<= v418 dlc_UInt_max ) )
              (declare-fun v419 () UInt )
              (assert (<= 0 v419 ) )
              (assert (<= v419 dlc_UInt_max ) )
              (declare-fun v420 () T0 )
              (assert true )
              (declare-fun v421 () UInt )
              (assert (<= 0 v421 ) )
              (assert (<= v421 dlc_UInt_max ) )
              (declare-fun v422 () Bool )
              (assert true )
              (assert (= v422 (<= v413 v412 ) ) )
              (assert v422 )
              (assert true )
              (push 1 ) ;; {
                (pop 1 ) ;; }
              (push 1 ) ;; {
                (declare-fun v423 () Address )
                (assert true )
                (assert (= v423 address_PoolCreator ) )
                (declare-fun pv_net580 () UInt )
                (assert (<= 0 pv_net580 ) )
                (declare-fun pv_tok582 () Token )
                (assert true )
                (declare-fun pv_ks581 () (Array Token UInt ) )
                (assert (<= 0 (select pv_ks581 pv_tok582 ) ) )
                (assert (= pv_net580 0 ) )
                (declare-fun v583 () Address )
                (assert true )
                (declare-fun v584 () Address )
                (assert true )
                (declare-fun v585 () Address )
                (assert true )
                (declare-fun v586 () Address )
                (assert true )
                (declare-fun v424 () UInt )
                (assert (<= 0 v424 ) )
                (declare-fun v425 () UInt )
                (assert (<= 0 v425 ) )
                (declare-fun v154 () Bool )
                (assert true )
                (assert (= v424 (+ v414 1 ) ) )
                (assert (>= v425 v417 ) )
                (push 1 ) ;; {
                  (assert (not (= 0 pv_net580 ) ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (assert (= 0 pv_net580 ) )
                (declare-fun v426 () Bool )
                (assert true )
                (assert (= v426 (= v341 v423 ) ) )
                (push 1 ) ;; {
                  (assert (not v426 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (assert v426 )
                (declare-fun v427 () T4 )
                (assert (T4_inv v427 ) )
                (assert (= v427 (T4_Contribution null ) ) )
                (push 1 ) ;; {
                  (push 1 ) ;; {
                    (declare-fun v428 () UInt )
                    (assert (<= 0 v428 ) )
                    (assert (<= v428 dlc_UInt_max ) )
                    (assert (= v428 v347 ) )
                    (declare-fun v429 () UInt )
                    (assert (<= 0 v429 ) )
                    (assert (<= v429 dlc_UInt_max ) )
                    (assert (= v429 v413 ) )
                    (declare-fun v430 () Bool )
                    (assert true )
                    (assert (= v430 true ) )
                    (declare-fun v431 () UInt )
                    (assert (<= 0 v431 ) )
                    (assert (<= v431 dlc_UInt_max ) )
                    (assert (= v431 v424 ) )
                    (declare-fun v432 () UInt )
                    (assert (<= 0 v432 ) )
                    (assert (<= v432 dlc_UInt_max ) )
                    (assert (= v432 v414 ) )
                    (declare-fun v433 () UInt )
                    (assert (<= 0 v433 ) )
                    (assert (<= v433 dlc_UInt_max ) )
                    (assert (= v433 v414 ) )
                    (declare-fun v434 () UInt )
                    (assert (<= 0 v434 ) )
                    (assert (<= v434 dlc_UInt_max ) )
                    (assert (= v434 v425 ) )
                    (declare-fun v435 () UInt )
                    (assert (<= 0 v435 ) )
                    (assert (<= v435 dlc_UInt_max ) )
                    (assert (= v435 v417 ) )
                    (declare-fun v436 () UInt )
                    (assert (<= 0 v436 ) )
                    (assert (<= v436 dlc_UInt_max ) )
                    (assert (= v436 v417 ) )
                    (declare-fun v437 () T0 )
                    (assert true )
                    (assert (= v437 v420 ) )
                    (declare-fun v438 () UInt )
                    (assert (<= 0 v438 ) )
                    (assert (<= v438 dlc_UInt_max ) )
                    (assert (= v438 v421 ) )
                    (declare-fun v439 () Bool )
                    (assert true )
                    (assert (= v439 (<= v413 v412 ) ) )
                    (push 1 ) ;; {
                      (assert (not v439 ) )
                      (check-sat-using (try-for default 10 ) )
                      ;; unsat
                      (pop 1 ) ;; }
                    (pop 1 ) ;; }
                  (pop 1 ) ;; }
                (push 1 ) ;; {
                  (declare-fun map0_3 () (Array Address T5 ) )
                  (declare-fun map1_3 () (Array Address T5 ) )
                  (declare-fun map2_3 () (Array Address T5 ) )
                  (declare-fun v428 () UInt )
                  (assert (<= 0 v428 ) )
                  (assert (<= v428 dlc_UInt_max ) )
                  (declare-fun v429 () UInt )
                  (assert (<= 0 v429 ) )
                  (assert (<= v429 dlc_UInt_max ) )
                  (declare-fun v430 () Bool )
                  (assert true )
                  (declare-fun v431 () UInt )
                  (assert (<= 0 v431 ) )
                  (assert (<= v431 dlc_UInt_max ) )
                  (declare-fun v432 () UInt )
                  (assert (<= 0 v432 ) )
                  (assert (<= v432 dlc_UInt_max ) )
                  (declare-fun v433 () UInt )
                  (assert (<= 0 v433 ) )
                  (assert (<= v433 dlc_UInt_max ) )
                  (declare-fun v434 () UInt )
                  (assert (<= 0 v434 ) )
                  (assert (<= v434 dlc_UInt_max ) )
                  (declare-fun v435 () UInt )
                  (assert (<= 0 v435 ) )
                  (assert (<= v435 dlc_UInt_max ) )
                  (declare-fun v436 () UInt )
                  (assert (<= 0 v436 ) )
                  (assert (<= v436 dlc_UInt_max ) )
                  (declare-fun v437 () T0 )
                  (assert true )
                  (declare-fun v438 () UInt )
                  (assert (<= 0 v438 ) )
                  (assert (<= v438 dlc_UInt_max ) )
                  (declare-fun v439 () Bool )
                  (assert true )
                  (assert (= v439 (<= v413 v412 ) ) )
                  (assert v439 )
                  (assert v430 )
                  (declare-fun v442 () UInt )
                  (assert (<= 0 v442 ) )
                  (assert (<= v442 dlc_UInt_max ) )
                  (assert (= v442 (- dlc_UInt_max v431 ) ) )
                  (declare-fun v443 () UInt )
                  (assert (<= 0 v443 ) )
                  (assert (<= v443 dlc_UInt_max ) )
                  (assert (= v443 (- v442 v346 ) ) )
                  (declare-fun v444 () Bool )
                  (assert true )
                  (assert (= v444 (>= v443 0 ) ) )
                  (push 1 ) ;; {
                    (assert (not v444 ) )
                    (check-sat-using (try-for default 10 ) )
                    ;; unsat
                    (pop 1 ) ;; }
                  (assert v444 )
                  (declare-fun v445 () UInt )
                  (assert (<= 0 v445 ) )
                  (assert (<= v445 dlc_UInt_max ) )
                  (assert (= v445 (+ v431 v346 ) ) )
                  (declare-fun v449 () T2 )
                  (assert true )
                  (push 1 ) ;; {
                    (push 1 ) ;; {
                      (pop 1 ) ;; }
                    (push 1 ) ;; {
                      (declare-fun v467 () Address )
                      (assert true )
                      (assert (= v467 address_PoolCreator ) )
                      (declare-fun pv_net590 () UInt )
                      (assert (<= 0 pv_net590 ) )
                      (declare-fun pv_tok592 () Token )
                      (assert true )
                      (declare-fun pv_ks591 () (Array Token UInt ) )
                      (assert (<= 0 (select pv_ks591 pv_tok592 ) ) )
                      (assert (= pv_net590 0 ) )
                      (declare-fun v593 () Address )
                      (assert true )
                      (declare-fun v594 () Address )
                      (assert true )
                      (declare-fun v595 () Address )
                      (assert true )
                      (declare-fun v596 () Address )
                      (assert true )
                      (declare-fun v468 () UInt )
                      (assert (<= 0 v468 ) )
                      (declare-fun v469 () UInt )
                      (assert (<= 0 v469 ) )
                      (declare-fun v220 () Bool )
                      (assert true )
                      (assert (= v468 (+ v431 1 ) ) )
                      (assert (>= v469 v434 ) )
                      (push 1 ) ;; {
                        (assert (not (= 0 pv_net590 ) ) )
                        (check-sat-using (try-for default 10 ) )
                        ;; unsat
                        (pop 1 ) ;; }
                      (assert (= 0 pv_net590 ) )
                      (declare-fun v470 () Bool )
                      (assert true )
                      (assert (= v470 (= v341 v467 ) ) )
                      (push 1 ) ;; {
                        (assert (not v470 ) )
                        (check-sat-using (try-for default 10 ) )
                        ;; unsat
                        (pop 1 ) ;; }
                      (assert v470 )
                      (push 1 ) ;; {
                        (declare-fun v597 () UInt )
                        (assert (<= 0 v597 ) )
                        (assert (<= v597 dlc_UInt_max ) )
                        (assert (= v597 v428 ) )
                        (declare-fun v598 () UInt )
                        (assert (<= 0 v598 ) )
                        (assert (<= v598 dlc_UInt_max ) )
                        (assert (= v598 v429 ) )
                        (declare-fun v599 () Bool )
                        (assert true )
                        (assert (= v599 false ) )
                        (declare-fun v600 () UInt )
                        (assert (<= 0 v600 ) )
                        (assert (<= v600 dlc_UInt_max ) )
                        (assert (= v600 v468 ) )
                        (declare-fun v601 () UInt )
                        (assert (<= 0 v601 ) )
                        (assert (<= v601 dlc_UInt_max ) )
                        (assert (= v601 v431 ) )
                        (declare-fun v602 () UInt )
                        (assert (<= 0 v602 ) )
                        (assert (<= v602 dlc_UInt_max ) )
                        (assert (= v602 v445 ) )
                        (declare-fun v603 () UInt )
                        (assert (<= 0 v603 ) )
                        (assert (<= v603 dlc_UInt_max ) )
                        (assert (= v603 v469 ) )
                        (declare-fun v604 () UInt )
                        (assert (<= 0 v604 ) )
                        (assert (<= v604 dlc_UInt_max ) )
                        (assert (= v604 v434 ) )
                        (declare-fun v605 () UInt )
                        (assert (<= 0 v605 ) )
                        (assert (<= v605 dlc_UInt_max ) )
                        (assert (= v605 v434 ) )
                        (declare-fun v606 () T0 )
                        (assert true )
                        (assert (= v606 v437 ) )
                        (declare-fun v607 () UInt )
                        (assert (<= 0 v607 ) )
                        (assert (<= v607 dlc_UInt_max ) )
                        (assert (= v607 v438 ) )
                        (declare-fun v608 () Bool )
                        (assert true )
                        (assert (= v608 (<= v413 v412 ) ) )
                        (push 1 ) ;; {
                          (assert (not v608 ) )
                          (check-sat-using (try-for default 10 ) )
                          ;; unsat
                          (pop 1 ) ;; }
                        (pop 1 ) ;; }
                      (pop 1 ) ;; }
                    (pop 1 ) ;; }
                  (push 1 ) ;; {
                    (declare-fun v452 () Address )
                    (assert true )
                    (assert (= v452 v583 ) )
                    (declare-fun v453 () T2 )
                    (assert true )
                    (assert (= v453 v449 ) )
                    (declare-fun pv_net609 () UInt )
                    (assert (<= 0 pv_net609 ) )
                    (declare-fun pv_tok611 () Token )
                    (assert true )
                    (declare-fun pv_ks610 () (Array Token UInt ) )
                    (assert (<= 0 (select pv_ks610 pv_tok611 ) ) )
                    (assert (= pv_net609 v345 ) )
                    (declare-fun v612 () Address )
                    (assert true )
                    (declare-fun v613 () Address )
                    (assert true )
                    (declare-fun v614 () Address )
                    (assert true )
                    (declare-fun v615 () Address )
                    (assert true )
                    (declare-fun v454 () UInt )
                    (assert (<= 0 v454 ) )
                    (declare-fun v455 () UInt )
                    (assert (<= 0 v455 ) )
                    (declare-fun v193 () Bool )
                    (assert true )
                    (assert (= v454 (+ v431 1 ) ) )
                    (assert (>= v455 v434 ) )
                    (declare-fun v458 () UInt )
                    (assert (<= 0 v458 ) )
                    (assert (<= v458 dlc_UInt_max ) )
                    (assert (= v458 (+ v438 v345 ) ) )
                    (push 1 ) ;; {
                      (assert (not (= v345 pv_net609 ) ) )
                      (check-sat-using (try-for default 10 ) )
                      ;; unsat
                      (pop 1 ) ;; }
                    (assert (= v345 pv_net609 ) )
                    (declare-fun map2_4 () (Array Address T5 ) )
                    (assert (= map2_4 (store map2_3 v452 (T5_Some null ) ) ) )
                    (declare-fun v460 () Null )
                    (assert true )
                    (assert (= v460 null ) )
                    (declare-fun v461 () Null )
                    (assert true )
                    (assert (= v461 v460 ) )
                    (push 1 ) ;; {
                      (declare-fun v617 () UInt )
                      (assert (<= 0 v617 ) )
                      (assert (<= v617 dlc_UInt_max ) )
                      (assert (= v617 v428 ) )
                      (declare-fun v618 () UInt )
                      (assert (<= 0 v618 ) )
                      (assert (<= v618 dlc_UInt_max ) )
                      (assert (= v618 v429 ) )
                      (declare-fun v619 () Bool )
                      (assert true )
                      (assert (= v619 true ) )
                      (declare-fun v620 () UInt )
                      (assert (<= 0 v620 ) )
                      (assert (<= v620 dlc_UInt_max ) )
                      (assert (= v620 v454 ) )
                      (declare-fun v621 () UInt )
                      (assert (<= 0 v621 ) )
                      (assert (<= v621 dlc_UInt_max ) )
                      (assert (= v621 v431 ) )
                      (declare-fun v622 () UInt )
                      (assert (<= 0 v622 ) )
                      (assert (<= v622 dlc_UInt_max ) )
                      (assert (= v622 v445 ) )
                      (declare-fun v623 () UInt )
                      (assert (<= 0 v623 ) )
                      (assert (<= v623 dlc_UInt_max ) )
                      (assert (= v623 v455 ) )
                      (declare-fun v624 () UInt )
                      (assert (<= 0 v624 ) )
                      (assert (<= v624 dlc_UInt_max ) )
                      (assert (= v624 v434 ) )
                      (declare-fun v625 () UInt )
                      (assert (<= 0 v625 ) )
                      (assert (<= v625 dlc_UInt_max ) )
                      (assert (= v625 v434 ) )
                      (declare-fun v626 () T0 )
                      (assert true )
                      (assert (= v626 v437 ) )
                      (declare-fun v627 () UInt )
                      (assert (<= 0 v627 ) )
                      (assert (<= v627 dlc_UInt_max ) )
                      (assert (= v627 v458 ) )
                      (declare-fun v628 () Bool )
                      (assert true )
                      (assert (= v628 (<= v413 v412 ) ) )
                      (push 1 ) ;; {
                        (assert (not v628 ) )
                        (check-sat-using (try-for default 10 ) )
                        ;; unsat
                        (pop 1 ) ;; }
                      (pop 1 ) ;; }
                    (pop 1 ) ;; }
                  (pop 1 ) ;; }
                (push 1 ) ;; {
                  (declare-fun map0_3 () (Array Address T5 ) )
                  (declare-fun map1_3 () (Array Address T5 ) )
                  (declare-fun map2_3 () (Array Address T5 ) )
                  (declare-fun v428 () UInt )
                  (assert (<= 0 v428 ) )
                  (assert (<= v428 dlc_UInt_max ) )
                  (declare-fun v429 () UInt )
                  (assert (<= 0 v429 ) )
                  (assert (<= v429 dlc_UInt_max ) )
                  (declare-fun v430 () Bool )
                  (assert true )
                  (declare-fun v431 () UInt )
                  (assert (<= 0 v431 ) )
                  (assert (<= v431 dlc_UInt_max ) )
                  (declare-fun v432 () UInt )
                  (assert (<= 0 v432 ) )
                  (assert (<= v432 dlc_UInt_max ) )
                  (declare-fun v433 () UInt )
                  (assert (<= 0 v433 ) )
                  (assert (<= v433 dlc_UInt_max ) )
                  (declare-fun v434 () UInt )
                  (assert (<= 0 v434 ) )
                  (assert (<= v434 dlc_UInt_max ) )
                  (declare-fun v435 () UInt )
                  (assert (<= 0 v435 ) )
                  (assert (<= v435 dlc_UInt_max ) )
                  (declare-fun v436 () UInt )
                  (assert (<= 0 v436 ) )
                  (assert (<= v436 dlc_UInt_max ) )
                  (declare-fun v437 () T0 )
                  (assert true )
                  (declare-fun v438 () UInt )
                  (assert (<= 0 v438 ) )
                  (assert (<= v438 dlc_UInt_max ) )
                  (declare-fun v439 () Bool )
                  (assert true )
                  (assert (= v439 (<= v413 v412 ) ) )
                  (assert v439 )
                  (assert (not v430 ) )
                  (declare-fun v474 () UInt )
                  (assert (<= 0 v474 ) )
                  (assert (<= v474 dlc_UInt_max ) )
                  (assert (= v474 (+ v431 v346 ) ) )
                  (push 1 ) ;; {
                    (pop 1 ) ;; }
                  (push 1 ) ;; {
                    (declare-fun v479 () Address )
                    (assert true )
                    (assert (= v479 address_PoolCreator ) )
                    (declare-fun pv_net632 () UInt )
                    (assert (<= 0 pv_net632 ) )
                    (declare-fun pv_tok634 () Token )
                    (assert true )
                    (declare-fun pv_ks633 () (Array Token UInt ) )
                    (assert (<= 0 (select pv_ks633 pv_tok634 ) ) )
                    (assert (= pv_net632 0 ) )
                    (declare-fun v635 () Address )
                    (assert true )
                    (declare-fun v636 () Address )
                    (assert true )
                    (declare-fun v637 () Address )
                    (assert true )
                    (declare-fun v638 () Address )
                    (assert true )
                    (declare-fun v480 () UInt )
                    (assert (<= 0 v480 ) )
                    (declare-fun v481 () UInt )
                    (assert (<= 0 v481 ) )
                    (declare-fun v238 () Bool )
                    (assert true )
                    (assert (= v480 (+ v431 1 ) ) )
                    (assert (>= v481 v434 ) )
                    (push 1 ) ;; {
                      (assert (not (= 0 pv_net632 ) ) )
                      (check-sat-using (try-for default 10 ) )
                      ;; unsat
                      (pop 1 ) ;; }
                    (assert (= 0 pv_net632 ) )
                    (declare-fun v482 () Bool )
                    (assert true )
                    (assert (= v482 (= v341 v479 ) ) )
                    (push 1 ) ;; {
                      (assert (not v482 ) )
                      (check-sat-using (try-for default 10 ) )
                      ;; unsat
                      (pop 1 ) ;; }
                    (assert v482 )
                    (push 1 ) ;; {
                      (pop 1 ) ;; }
                    (push 1 ) ;; {
                      (declare-fun v483 () Address )
                      (assert true )
                      (assert (= v483 address_PoolCreator ) )
                      (declare-fun pv_net639 () UInt )
                      (assert (<= 0 pv_net639 ) )
                      (declare-fun pv_tok641 () Token )
                      (assert true )
                      (declare-fun pv_ks640 () (Array Token UInt ) )
                      (assert (<= 0 (select pv_ks640 pv_tok641 ) ) )
                      (assert (= pv_net639 0 ) )
                      (declare-fun v642 () Address )
                      (assert true )
                      (declare-fun v643 () Address )
                      (assert true )
                      (declare-fun v644 () Address )
                      (assert true )
                      (declare-fun v645 () Address )
                      (assert true )
                      (declare-fun v484 () UInt )
                      (assert (<= 0 v484 ) )
                      (declare-fun v485 () UInt )
                      (assert (<= 0 v485 ) )
                      (declare-fun v243 () Bool )
                      (assert true )
                      (assert (= v484 (+ v480 1 ) ) )
                      (assert (>= v485 v481 ) )
                      (push 1 ) ;; {
                        (assert (not (= 0 pv_net639 ) ) )
                        (check-sat-using (try-for default 10 ) )
                        ;; unsat
                        (pop 1 ) ;; }
                      (assert (= 0 pv_net639 ) )
                      (declare-fun v486 () Bool )
                      (assert true )
                      (assert (= v486 (= v341 v483 ) ) )
                      (push 1 ) ;; {
                        (assert (not v486 ) )
                        (check-sat-using (try-for default 10 ) )
                        ;; unsat
                        (pop 1 ) ;; }
                      (assert v486 )
                      (declare-fun v487 () T4 )
                      (assert (T4_inv v487 ) )
                      (assert (= v487 (T4_Payment null ) ) )
                      (declare-fun v488 () Address )
                      (assert true )
                      (assert (= v488 v643 ) )
                      (declare-fun v490 () T2 )
                      (assert true )
                      (declare-fun v492 () T5 )
                      (assert (T5_inv v492 ) )
                      (assert (= v492 (select map1_3 v488 ) ) )
                      (declare-fun v493 () Bool )
                      (assert true )
                      (declare-fun v494 () Null )
                      (assert true )
                      (assert (=> (= v492 (T5_None v494 ) ) (= v493 false ) ) )
                      (declare-fun v495 () Null )
                      (assert true )
                      (assert (=> (= v492 (T5_Some v495 ) ) (= v493 true ) ) )
                      (assert (or (= v492 (T5_None v494 ) ) (= v492 (T5_Some v495 ) ) ) )
                      (declare-fun v496 () Bool )
                      (assert true )
                      (assert (= v496 (ite v493 false true ) ) )
                      (assert v496 )
                      (push 1 ) ;; {
                        (pop 1 ) ;; }
                      (push 1 ) ;; {
                        (declare-fun v497 () Address )
                        (assert true )
                        (assert (= v497 v643 ) )
                        (declare-fun v498 () T2 )
                        (assert true )
                        (assert (= v498 v490 ) )
                        (declare-fun pv_net646 () UInt )
                        (assert (<= 0 pv_net646 ) )
                        (declare-fun pv_tok648 () Token )
                        (assert true )
                        (declare-fun pv_ks647 () (Array Token UInt ) )
                        (assert (<= 0 (select pv_ks647 pv_tok648 ) ) )
                        (assert (= pv_net646 0 ) )
                        (declare-fun v649 () Address )
                        (assert true )
                        (declare-fun v650 () Address )
                        (assert true )
                        (declare-fun v651 () Address )
                        (assert true )
                        (declare-fun v652 () Address )
                        (assert true )
                        (declare-fun v499 () UInt )
                        (assert (<= 0 v499 ) )
                        (declare-fun v500 () UInt )
                        (assert (<= 0 v500 ) )
                        (declare-fun v267 () Bool )
                        (assert true )
                        (assert (= v499 (+ v484 1 ) ) )
                        (assert (>= v500 v485 ) )
                        (push 1 ) ;; {
                          (assert (not (= 0 pv_net646 ) ) )
                          (check-sat-using (try-for default 10 ) )
                          ;; unsat
                          (pop 1 ) ;; }
                        (assert (= 0 pv_net646 ) )
                        (declare-fun v503 () Bool )
                        (assert true )
                        (assert (= v503 (<= v438 v438 ) ) )
                        (push 1 ) ;; {
                          (assert (not v503 ) )
                          (check-sat-using (try-for default 10 ) )
                          ;; unsat
                          (pop 1 ) ;; }
                        (assert v503 )
                        (declare-fun v505 () UInt )
                        (assert (<= 0 v505 ) )
                        (assert (<= v505 dlc_UInt_max ) )
                        (assert (= v505 (- v438 v438 ) ) )
                        (declare-fun map1_4 () (Array Address T5 ) )
                        (assert (= map1_4 (store map1_3 v497 (T5_Some null ) ) ) )
                        (declare-fun v507 () Null )
                        (assert true )
                        (assert (= v507 null ) )
                        (declare-fun v508 () Null )
                        (assert true )
                        (assert (= v508 v507 ) )
                        (declare-fun v512 () UInt )
                        (assert (<= 0 v512 ) )
                        (assert (<= v512 dlc_UInt_max ) )
                        (assert (= v512 (+ v413 1 ) ) )
                        (declare-fun v513 () UInt )
                        (assert (<= 0 v513 ) )
                        (assert (<= v513 dlc_UInt_max ) )
                        (assert (= v513 (+ v412 1 ) ) )
                        (push 1 ) ;; {
                          (declare-fun v654 () UInt )
                          (assert (<= 0 v654 ) )
                          (assert (<= v654 dlc_UInt_max ) )
                          (assert (= v654 v513 ) )
                          (declare-fun v655 () UInt )
                          (assert (<= 0 v655 ) )
                          (assert (<= v655 dlc_UInt_max ) )
                          (assert (= v655 v512 ) )
                          (declare-fun v656 () UInt )
                          (assert (<= 0 v656 ) )
                          (assert (<= v656 dlc_UInt_max ) )
                          (assert (= v656 v499 ) )
                          (declare-fun v657 () UInt )
                          (assert (<= 0 v657 ) )
                          (assert (<= v657 dlc_UInt_max ) )
                          (assert (= v657 v484 ) )
                          (declare-fun v658 () UInt )
                          (assert (<= 0 v658 ) )
                          (assert (<= v658 dlc_UInt_max ) )
                          (assert (= v658 v484 ) )
                          (declare-fun v659 () UInt )
                          (assert (<= 0 v659 ) )
                          (assert (<= v659 dlc_UInt_max ) )
                          (assert (= v659 v500 ) )
                          (declare-fun v660 () UInt )
                          (assert (<= 0 v660 ) )
                          (assert (<= v660 dlc_UInt_max ) )
                          (assert (= v660 v485 ) )
                          (declare-fun v661 () UInt )
                          (assert (<= 0 v661 ) )
                          (assert (<= v661 dlc_UInt_max ) )
                          (assert (= v661 v485 ) )
                          (declare-fun v662 () T0 )
                          (assert true )
                          (assert (= v662 v437 ) )
                          (declare-fun v663 () UInt )
                          (assert (<= 0 v663 ) )
                          (assert (<= v663 dlc_UInt_max ) )
                          (assert (= v663 v505 ) )
                          (declare-fun v664 () Bool )
                          (assert true )
                          (assert (= v664 (<= v655 v654 ) ) )
                          (push 1 ) ;; {
                            (assert (not v664 ) )
                            (check-sat-using (try-for default 10 ) )
                            ;; unsat
                            (pop 1 ) ;; }
                          (pop 1 ) ;; }
                        (pop 1 ) ;; }
                      (pop 1 ) ;; }
                    (pop 1 ) ;; }
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun map0_2 () (Array Address T5 ) )
              (declare-fun map1_2 () (Array Address T5 ) )
              (declare-fun map2_2 () (Array Address T5 ) )
              (declare-fun v412 () UInt )
              (assert (<= 0 v412 ) )
              (assert (<= v412 dlc_UInt_max ) )
              (declare-fun v413 () UInt )
              (assert (<= 0 v413 ) )
              (assert (<= v413 dlc_UInt_max ) )
              (declare-fun v414 () UInt )
              (assert (<= 0 v414 ) )
              (assert (<= v414 dlc_UInt_max ) )
              (declare-fun v415 () UInt )
              (assert (<= 0 v415 ) )
              (assert (<= v415 dlc_UInt_max ) )
              (declare-fun v416 () UInt )
              (assert (<= 0 v416 ) )
              (assert (<= v416 dlc_UInt_max ) )
              (declare-fun v417 () UInt )
              (assert (<= 0 v417 ) )
              (assert (<= v417 dlc_UInt_max ) )
              (declare-fun v418 () UInt )
              (assert (<= 0 v418 ) )
              (assert (<= v418 dlc_UInt_max ) )
              (declare-fun v419 () UInt )
              (assert (<= 0 v419 ) )
              (assert (<= v419 dlc_UInt_max ) )
              (declare-fun v420 () T0 )
              (assert true )
              (declare-fun v421 () UInt )
              (assert (<= 0 v421 ) )
              (assert (<= v421 dlc_UInt_max ) )
              (declare-fun v422 () Bool )
              (assert true )
              (assert (= v422 (<= v413 v412 ) ) )
              (assert v422 )
              (assert (not true ) )
              (push 1 ) ;; {
                (pop 1 ) ;; }
              (push 1 ) ;; {
                (declare-fun v514 () Address )
                (assert true )
                (assert (= v514 address_PoolCreator ) )
                (declare-fun pv_net668 () UInt )
                (assert (<= 0 pv_net668 ) )
                (declare-fun pv_tok670 () Token )
                (assert true )
                (declare-fun pv_ks669 () (Array Token UInt ) )
                (assert (<= 0 (select pv_ks669 pv_tok670 ) ) )
                (assert (= pv_net668 0 ) )
                (declare-fun v671 () Address )
                (assert true )
                (declare-fun v672 () Address )
                (assert true )
                (declare-fun v673 () Address )
                (assert true )
                (declare-fun v674 () Address )
                (assert true )
                (declare-fun v515 () UInt )
                (assert (<= 0 v515 ) )
                (declare-fun v516 () UInt )
                (assert (<= 0 v516 ) )
                (declare-fun v286 () Bool )
                (assert true )
                (assert (= v515 (+ v414 1 ) ) )
                (assert (>= v516 v417 ) )
                (push 1 ) ;; {
                  (assert (not (= 0 pv_net668 ) ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (assert (= 0 pv_net668 ) )
                (declare-fun v517 () Bool )
                (assert true )
                (assert (= v517 (= v341 v514 ) ) )
                (push 1 ) ;; {
                  (assert (not v517 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (assert v517 )
                (declare-fun v518 () T4 )
                (assert (T4_inv v518 ) )
                (assert (= v518 (T4_Finished null ) ) )
                (declare-fun v520 () Bool )
                (assert true )
                (assert (= v520 (= 0 v421 ) ) )
                (push 1 ) ;; {
                  (assert (not v520 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (assert v520 )
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (pop 1 ) ;; }
          (pop 1 ) ;; }
        (pop 1 ) ;; }
      (pop 1 ) ;; }
    (pop 1 ) ;; }
  (push 1 ) ;; {
    (declare-fun v675 () Address )
    (assert true )
    (declare-fun v676 () Address )
    (assert true )
    (declare-fun v677 () Address )
    (assert true )
    (declare-fun v678 () Address )
    (assert true )
    (declare-fun v321 () T0 )
    (assert true )
    (assert (= v321 T0_cons ) )
    (push 1 ) ;; {
      (pop 1 ) ;; }
    (push 1 ) ;; {
      (declare-fun v341 () Address )
      (assert true )
      (declare-fun v342 () T3 )
      (assert (and (<= 0 (T3_contributionAmt v342 ) ) (<= 0 (T3_duration v342 ) ) (<= 0 (T3_maxUsers v342 ) ) (<= 0 (T3_penaltyAmt v342 ) ) true true ) )
      (declare-fun pv_net679 () UInt )
      (assert (<= 0 pv_net679 ) )
      (declare-fun pv_tok681 () Token )
      (assert true )
      (declare-fun pv_ks680 () (Array Token UInt ) )
      (assert (<= 0 (select pv_ks680 pv_tok681 ) ) )
      (declare-fun v682 () Address )
      (assert true )
      (declare-fun v683 () Address )
      (assert true )
      (declare-fun v684 () Address )
      (assert true )
      (declare-fun v685 () Address )
      (assert true )
      (declare-fun v343 () UInt )
      (assert (<= 0 v343 ) )
      (declare-fun v344 () UInt )
      (assert (<= 0 v344 ) )
      (declare-fun v40 () Bool )
      (assert true )
      (assert (= v343 0 ) )
      (assert (= v344 0 ) )
      (assert (= 0 pv_net679 ) )
      (declare-fun v345 () UInt )
      (assert (<= 0 v345 ) )
      (assert (<= v345 dlc_UInt_max ) )
      (assert (= v345 (T3_contributionAmt v342 ) ) )
      (declare-fun v346 () UInt )
      (assert (<= 0 v346 ) )
      (assert (<= v346 dlc_UInt_max ) )
      (assert (= v346 (T3_duration v342 ) ) )
      (declare-fun v347 () UInt )
      (assert (<= 0 v347 ) )
      (assert (<= v347 dlc_UInt_max ) )
      (assert (= v347 (T3_maxUsers v342 ) ) )
      (declare-fun v348 () UInt )
      (assert (<= 0 v348 ) )
      (assert (<= v348 dlc_UInt_max ) )
      (assert (= v348 (T3_penaltyAmt v342 ) ) )
      (push 1 ) ;; {
        (declare-fun v686 () Address )
        (assert true )
        (declare-fun v687 () Address )
        (assert true )
        (declare-fun v688 () Address )
        (assert true )
        (declare-fun v689 () Address )
        (assert true )
        (pop 1 ) ;; }
      (declare-fun v353 () UInt )
      (assert (<= 0 v353 ) )
      (assert (<= v353 dlc_UInt_max ) )
      (assert (= v353 (div v345 2 ) ) )
      (declare-fun v355 () Bool )
      (assert true )
      (assert (= v355 (= v348 v353 ) ) )
      (assert v355 )
      (declare-fun v357 () Bool )
      (assert true )
      (assert (= v357 (> v345 0 ) ) )
      (assert v357 )
      (declare-fun v362 () UInt )
      (assert (<= 0 v362 ) )
      (assert (<= v362 dlc_UInt_max ) )
      (assert (= v362 (+ v345 v348 ) ) )
      (push 1 ) ;; {
        (pop 1 ) ;; }
      (push 1 ) ;; {
        (declare-fun v363 () Address )
        (assert true )
        (declare-fun pv_net690 () UInt )
        (assert (<= 0 pv_net690 ) )
        (declare-fun pv_tok692 () Token )
        (assert true )
        (declare-fun pv_ks691 () (Array Token UInt ) )
        (assert (<= 0 (select pv_ks691 pv_tok692 ) ) )
        (declare-fun v693 () Address )
        (assert true )
        (declare-fun v694 () Address )
        (assert true )
        (declare-fun v695 () Address )
        (assert true )
        (declare-fun v696 () Address )
        (assert true )
        (declare-fun v364 () UInt )
        (assert (<= 0 v364 ) )
        (declare-fun v365 () UInt )
        (assert (<= 0 v365 ) )
        (declare-fun v65 () Bool )
        (assert true )
        (assert (= v364 (+ v343 1 ) ) )
        (assert (>= v365 v344 ) )
        (assert (= v362 pv_net690 ) )
        (declare-fun v368 () Bool )
        (assert true )
        (assert (= v368 (= v341 v363 ) ) )
        (assert v368 )
        (push 1 ) ;; {
          (pop 1 ) ;; }
        (push 1 ) ;; {
          (declare-fun v370 () Address )
          (assert true )
          (declare-fun pv_net697 () UInt )
          (assert (<= 0 pv_net697 ) )
          (declare-fun pv_tok699 () Token )
          (assert true )
          (declare-fun pv_ks698 () (Array Token UInt ) )
          (assert (<= 0 (select pv_ks698 pv_tok699 ) ) )
          (declare-fun v700 () Address )
          (assert true )
          (declare-fun v701 () Address )
          (assert true )
          (declare-fun v702 () Address )
          (assert true )
          (declare-fun v703 () Address )
          (assert true )
          (declare-fun v371 () UInt )
          (assert (<= 0 v371 ) )
          (declare-fun v372 () UInt )
          (assert (<= 0 v372 ) )
          (declare-fun v74 () Bool )
          (assert true )
          (assert (= v371 (+ v364 1 ) ) )
          (assert (>= v372 v365 ) )
          (assert (= 0 pv_net697 ) )
          (declare-fun v373 () Bool )
          (assert true )
          (assert (= v373 (= v341 v370 ) ) )
          (assert v373 )
          (declare-fun v374 () T4 )
          (assert (T4_inv v374 ) )
          (assert (= v374 (T4_Registration null ) ) )
          (push 1 ) ;; {
            (push 1 ) ;; {
              (declare-fun v375 () UInt )
              (assert (<= 0 v375 ) )
              (assert (<= v375 dlc_UInt_max ) )
              (assert (= v375 0 ) )
              (declare-fun v376 () UInt )
              (assert (<= 0 v376 ) )
              (assert (<= v376 dlc_UInt_max ) )
              (assert (= v376 v371 ) )
              (declare-fun v377 () UInt )
              (assert (<= 0 v377 ) )
              (assert (<= v377 dlc_UInt_max ) )
              (assert (= v377 v364 ) )
              (declare-fun v378 () UInt )
              (assert (<= 0 v378 ) )
              (assert (<= v378 dlc_UInt_max ) )
              (assert (= v378 v364 ) )
              (declare-fun v379 () UInt )
              (assert (<= 0 v379 ) )
              (assert (<= v379 dlc_UInt_max ) )
              (assert (= v379 v372 ) )
              (declare-fun v380 () UInt )
              (assert (<= 0 v380 ) )
              (assert (<= v380 dlc_UInt_max ) )
              (assert (= v380 v365 ) )
              (declare-fun v381 () UInt )
              (assert (<= 0 v381 ) )
              (assert (<= v381 dlc_UInt_max ) )
              (assert (= v381 v365 ) )
              (declare-fun v382 () T0 )
              (assert true )
              (assert (= v382 v321 ) )
              (declare-fun v383 () UInt )
              (assert (<= 0 v383 ) )
              (assert (<= v383 dlc_UInt_max ) )
              (assert (= v383 v362 ) )
              (declare-fun v384 () Bool )
              (assert true )
              (assert (= v384 (>= v375 0 ) ) )
              (push 1 ) ;; {
                (assert (not v384 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun map0_1 () (Array Address T5 ) )
            (declare-fun map1_1 () (Array Address T5 ) )
            (declare-fun map2_1 () (Array Address T5 ) )
            (declare-fun v375 () UInt )
            (assert (<= 0 v375 ) )
            (assert (<= v375 dlc_UInt_max ) )
            (declare-fun v376 () UInt )
            (assert (<= 0 v376 ) )
            (assert (<= v376 dlc_UInt_max ) )
            (declare-fun v377 () UInt )
            (assert (<= 0 v377 ) )
            (assert (<= v377 dlc_UInt_max ) )
            (declare-fun v378 () UInt )
            (assert (<= 0 v378 ) )
            (assert (<= v378 dlc_UInt_max ) )
            (declare-fun v379 () UInt )
            (assert (<= 0 v379 ) )
            (assert (<= v379 dlc_UInt_max ) )
            (declare-fun v380 () UInt )
            (assert (<= 0 v380 ) )
            (assert (<= v380 dlc_UInt_max ) )
            (declare-fun v381 () UInt )
            (assert (<= 0 v381 ) )
            (assert (<= v381 dlc_UInt_max ) )
            (declare-fun v382 () T0 )
            (assert true )
            (declare-fun v383 () UInt )
            (assert (<= 0 v383 ) )
            (assert (<= v383 dlc_UInt_max ) )
            (declare-fun v384 () Bool )
            (assert true )
            (assert (= v384 (>= v375 0 ) ) )
            (assert v384 )
            (declare-fun v385 () Bool )
            (assert true )
            (assert (= v385 (<= v375 v347 ) ) )
            (assert v385 )
            (push 1 ) ;; {
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v396 () Address )
              (assert true )
              (declare-fun v397 () T2 )
              (assert true )
              (declare-fun pv_net707 () UInt )
              (assert (<= 0 pv_net707 ) )
              (declare-fun pv_tok709 () Token )
              (assert true )
              (declare-fun pv_ks708 () (Array Token UInt ) )
              (assert (<= 0 (select pv_ks708 pv_tok709 ) ) )
              (declare-fun v710 () Address )
              (assert true )
              (declare-fun v711 () Address )
              (assert true )
              (declare-fun v712 () Address )
              (assert true )
              (declare-fun v713 () Address )
              (assert true )
              (declare-fun v398 () UInt )
              (assert (<= 0 v398 ) )
              (declare-fun v399 () UInt )
              (assert (<= 0 v399 ) )
              (declare-fun v131 () Bool )
              (assert true )
              (assert (= v398 (+ v376 1 ) ) )
              (assert (>= v399 v379 ) )
              (declare-fun v402 () UInt )
              (assert (<= 0 v402 ) )
              (assert (<= v402 dlc_UInt_max ) )
              (assert (= v402 (+ v383 v348 ) ) )
              (assert (= v348 pv_net707 ) )
              (declare-fun map0_2 () (Array Address T5 ) )
              (assert (= map0_2 (store map0_1 v396 (T5_Some null ) ) ) )
              (declare-fun v404 () Null )
              (assert true )
              (assert (= v404 null ) )
              (declare-fun v405 () Null )
              (assert true )
              (assert (= v405 v404 ) )
              (declare-fun v410 () UInt )
              (assert (<= 0 v410 ) )
              (assert (<= v410 dlc_UInt_max ) )
              (assert (= v410 (+ v375 1 ) ) )
              (push 1 ) ;; {
                (declare-fun v715 () UInt )
                (assert (<= 0 v715 ) )
                (assert (<= v715 dlc_UInt_max ) )
                (assert (= v715 v410 ) )
                (declare-fun v716 () UInt )
                (assert (<= 0 v716 ) )
                (assert (<= v716 dlc_UInt_max ) )
                (assert (= v716 v398 ) )
                (declare-fun v717 () UInt )
                (assert (<= 0 v717 ) )
                (assert (<= v717 dlc_UInt_max ) )
                (assert (= v717 v376 ) )
                (declare-fun v718 () UInt )
                (assert (<= 0 v718 ) )
                (assert (<= v718 dlc_UInt_max ) )
                (assert (= v718 v376 ) )
                (declare-fun v719 () UInt )
                (assert (<= 0 v719 ) )
                (assert (<= v719 dlc_UInt_max ) )
                (assert (= v719 v399 ) )
                (declare-fun v720 () UInt )
                (assert (<= 0 v720 ) )
                (assert (<= v720 dlc_UInt_max ) )
                (assert (= v720 v379 ) )
                (declare-fun v721 () UInt )
                (assert (<= 0 v721 ) )
                (assert (<= v721 dlc_UInt_max ) )
                (assert (= v721 v379 ) )
                (declare-fun v722 () T0 )
                (assert true )
                (assert (= v722 v382 ) )
                (declare-fun v723 () UInt )
                (assert (<= 0 v723 ) )
                (assert (<= v723 dlc_UInt_max ) )
                (assert (= v723 v402 ) )
                (declare-fun v724 () Bool )
                (assert true )
                (assert (= v724 (>= v715 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v724 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun map0_1 () (Array Address T5 ) )
            (declare-fun map1_1 () (Array Address T5 ) )
            (declare-fun map2_1 () (Array Address T5 ) )
            (declare-fun v375 () UInt )
            (assert (<= 0 v375 ) )
            (assert (<= v375 dlc_UInt_max ) )
            (declare-fun v376 () UInt )
            (assert (<= 0 v376 ) )
            (assert (<= v376 dlc_UInt_max ) )
            (declare-fun v377 () UInt )
            (assert (<= 0 v377 ) )
            (assert (<= v377 dlc_UInt_max ) )
            (declare-fun v378 () UInt )
            (assert (<= 0 v378 ) )
            (assert (<= v378 dlc_UInt_max ) )
            (declare-fun v379 () UInt )
            (assert (<= 0 v379 ) )
            (assert (<= v379 dlc_UInt_max ) )
            (declare-fun v380 () UInt )
            (assert (<= 0 v380 ) )
            (assert (<= v380 dlc_UInt_max ) )
            (declare-fun v381 () UInt )
            (assert (<= 0 v381 ) )
            (assert (<= v381 dlc_UInt_max ) )
            (declare-fun v382 () T0 )
            (assert true )
            (declare-fun v383 () UInt )
            (assert (<= 0 v383 ) )
            (assert (<= v383 dlc_UInt_max ) )
            (declare-fun v384 () Bool )
            (assert true )
            (assert (= v384 (>= v375 0 ) ) )
            (assert v384 )
            (declare-fun v385 () Bool )
            (assert true )
            (assert (= v385 (<= v375 v347 ) ) )
            (assert (not v385 ) )
            (push 1 ) ;; {
              (push 1 ) ;; {
                (declare-fun v412 () UInt )
                (assert (<= 0 v412 ) )
                (assert (<= v412 dlc_UInt_max ) )
                (assert (= v412 0 ) )
                (declare-fun v413 () UInt )
                (assert (<= 0 v413 ) )
                (assert (<= v413 dlc_UInt_max ) )
                (assert (= v413 0 ) )
                (declare-fun v414 () UInt )
                (assert (<= 0 v414 ) )
                (assert (<= v414 dlc_UInt_max ) )
                (assert (= v414 v376 ) )
                (declare-fun v415 () UInt )
                (assert (<= 0 v415 ) )
                (assert (<= v415 dlc_UInt_max ) )
                (assert (= v415 v377 ) )
                (declare-fun v416 () UInt )
                (assert (<= 0 v416 ) )
                (assert (<= v416 dlc_UInt_max ) )
                (assert (= v416 v378 ) )
                (declare-fun v417 () UInt )
                (assert (<= 0 v417 ) )
                (assert (<= v417 dlc_UInt_max ) )
                (assert (= v417 v379 ) )
                (declare-fun v418 () UInt )
                (assert (<= 0 v418 ) )
                (assert (<= v418 dlc_UInt_max ) )
                (assert (= v418 v380 ) )
                (declare-fun v419 () UInt )
                (assert (<= 0 v419 ) )
                (assert (<= v419 dlc_UInt_max ) )
                (assert (= v419 v381 ) )
                (declare-fun v420 () T0 )
                (assert true )
                (assert (= v420 v382 ) )
                (declare-fun v421 () UInt )
                (assert (<= 0 v421 ) )
                (assert (<= v421 dlc_UInt_max ) )
                (assert (= v421 v383 ) )
                (declare-fun v422 () Bool )
                (assert true )
                (assert (= v422 (<= v413 v412 ) ) )
                (push 1 ) ;; {
                  (assert (not v422 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun map0_2 () (Array Address T5 ) )
              (declare-fun map1_2 () (Array Address T5 ) )
              (declare-fun map2_2 () (Array Address T5 ) )
              (declare-fun v412 () UInt )
              (assert (<= 0 v412 ) )
              (assert (<= v412 dlc_UInt_max ) )
              (declare-fun v413 () UInt )
              (assert (<= 0 v413 ) )
              (assert (<= v413 dlc_UInt_max ) )
              (declare-fun v414 () UInt )
              (assert (<= 0 v414 ) )
              (assert (<= v414 dlc_UInt_max ) )
              (declare-fun v415 () UInt )
              (assert (<= 0 v415 ) )
              (assert (<= v415 dlc_UInt_max ) )
              (declare-fun v416 () UInt )
              (assert (<= 0 v416 ) )
              (assert (<= v416 dlc_UInt_max ) )
              (declare-fun v417 () UInt )
              (assert (<= 0 v417 ) )
              (assert (<= v417 dlc_UInt_max ) )
              (declare-fun v418 () UInt )
              (assert (<= 0 v418 ) )
              (assert (<= v418 dlc_UInt_max ) )
              (declare-fun v419 () UInt )
              (assert (<= 0 v419 ) )
              (assert (<= v419 dlc_UInt_max ) )
              (declare-fun v420 () T0 )
              (assert true )
              (declare-fun v421 () UInt )
              (assert (<= 0 v421 ) )
              (assert (<= v421 dlc_UInt_max ) )
              (declare-fun v422 () Bool )
              (assert true )
              (assert (= v422 (<= v413 v412 ) ) )
              (assert v422 )
              (assert true )
              (push 1 ) ;; {
                (pop 1 ) ;; }
              (push 1 ) ;; {
                (declare-fun v423 () Address )
                (assert true )
                (declare-fun pv_net731 () UInt )
                (assert (<= 0 pv_net731 ) )
                (declare-fun pv_tok733 () Token )
                (assert true )
                (declare-fun pv_ks732 () (Array Token UInt ) )
                (assert (<= 0 (select pv_ks732 pv_tok733 ) ) )
                (declare-fun v734 () Address )
                (assert true )
                (declare-fun v735 () Address )
                (assert true )
                (declare-fun v736 () Address )
                (assert true )
                (declare-fun v737 () Address )
                (assert true )
                (declare-fun v424 () UInt )
                (assert (<= 0 v424 ) )
                (declare-fun v425 () UInt )
                (assert (<= 0 v425 ) )
                (declare-fun v154 () Bool )
                (assert true )
                (assert (= v424 (+ v414 1 ) ) )
                (assert (>= v425 v417 ) )
                (assert (= 0 pv_net731 ) )
                (declare-fun v426 () Bool )
                (assert true )
                (assert (= v426 (= v341 v423 ) ) )
                (assert v426 )
                (declare-fun v427 () T4 )
                (assert (T4_inv v427 ) )
                (assert (= v427 (T4_Contribution null ) ) )
                (push 1 ) ;; {
                  (push 1 ) ;; {
                    (declare-fun v428 () UInt )
                    (assert (<= 0 v428 ) )
                    (assert (<= v428 dlc_UInt_max ) )
                    (assert (= v428 v347 ) )
                    (declare-fun v429 () UInt )
                    (assert (<= 0 v429 ) )
                    (assert (<= v429 dlc_UInt_max ) )
                    (assert (= v429 v413 ) )
                    (declare-fun v430 () Bool )
                    (assert true )
                    (assert (= v430 true ) )
                    (declare-fun v431 () UInt )
                    (assert (<= 0 v431 ) )
                    (assert (<= v431 dlc_UInt_max ) )
                    (assert (= v431 v424 ) )
                    (declare-fun v432 () UInt )
                    (assert (<= 0 v432 ) )
                    (assert (<= v432 dlc_UInt_max ) )
                    (assert (= v432 v414 ) )
                    (declare-fun v433 () UInt )
                    (assert (<= 0 v433 ) )
                    (assert (<= v433 dlc_UInt_max ) )
                    (assert (= v433 v414 ) )
                    (declare-fun v434 () UInt )
                    (assert (<= 0 v434 ) )
                    (assert (<= v434 dlc_UInt_max ) )
                    (assert (= v434 v425 ) )
                    (declare-fun v435 () UInt )
                    (assert (<= 0 v435 ) )
                    (assert (<= v435 dlc_UInt_max ) )
                    (assert (= v435 v417 ) )
                    (declare-fun v436 () UInt )
                    (assert (<= 0 v436 ) )
                    (assert (<= v436 dlc_UInt_max ) )
                    (assert (= v436 v417 ) )
                    (declare-fun v437 () T0 )
                    (assert true )
                    (assert (= v437 v420 ) )
                    (declare-fun v438 () UInt )
                    (assert (<= 0 v438 ) )
                    (assert (<= v438 dlc_UInt_max ) )
                    (assert (= v438 v421 ) )
                    (declare-fun v439 () Bool )
                    (assert true )
                    (assert (= v439 (<= v413 v412 ) ) )
                    (push 1 ) ;; {
                      (assert (not v439 ) )
                      (check-sat-using (try-for default 10 ) )
                      ;; unsat
                      (pop 1 ) ;; }
                    (pop 1 ) ;; }
                  (pop 1 ) ;; }
                (push 1 ) ;; {
                  (declare-fun map0_3 () (Array Address T5 ) )
                  (declare-fun map1_3 () (Array Address T5 ) )
                  (declare-fun map2_3 () (Array Address T5 ) )
                  (declare-fun v428 () UInt )
                  (assert (<= 0 v428 ) )
                  (assert (<= v428 dlc_UInt_max ) )
                  (declare-fun v429 () UInt )
                  (assert (<= 0 v429 ) )
                  (assert (<= v429 dlc_UInt_max ) )
                  (declare-fun v430 () Bool )
                  (assert true )
                  (declare-fun v431 () UInt )
                  (assert (<= 0 v431 ) )
                  (assert (<= v431 dlc_UInt_max ) )
                  (declare-fun v432 () UInt )
                  (assert (<= 0 v432 ) )
                  (assert (<= v432 dlc_UInt_max ) )
                  (declare-fun v433 () UInt )
                  (assert (<= 0 v433 ) )
                  (assert (<= v433 dlc_UInt_max ) )
                  (declare-fun v434 () UInt )
                  (assert (<= 0 v434 ) )
                  (assert (<= v434 dlc_UInt_max ) )
                  (declare-fun v435 () UInt )
                  (assert (<= 0 v435 ) )
                  (assert (<= v435 dlc_UInt_max ) )
                  (declare-fun v436 () UInt )
                  (assert (<= 0 v436 ) )
                  (assert (<= v436 dlc_UInt_max ) )
                  (declare-fun v437 () T0 )
                  (assert true )
                  (declare-fun v438 () UInt )
                  (assert (<= 0 v438 ) )
                  (assert (<= v438 dlc_UInt_max ) )
                  (declare-fun v439 () Bool )
                  (assert true )
                  (assert (= v439 (<= v413 v412 ) ) )
                  (assert v439 )
                  (assert v430 )
                  (declare-fun v442 () UInt )
                  (assert (<= 0 v442 ) )
                  (assert (<= v442 dlc_UInt_max ) )
                  (assert (= v442 (- dlc_UInt_max v431 ) ) )
                  (declare-fun v443 () UInt )
                  (assert (<= 0 v443 ) )
                  (assert (<= v443 dlc_UInt_max ) )
                  (assert (= v443 (- v442 v346 ) ) )
                  (declare-fun v444 () Bool )
                  (assert true )
                  (assert (= v444 (>= v443 0 ) ) )
                  (assert v444 )
                  (declare-fun v445 () UInt )
                  (assert (<= 0 v445 ) )
                  (assert (<= v445 dlc_UInt_max ) )
                  (assert (= v445 (+ v431 v346 ) ) )
                  (push 1 ) ;; {
                    (push 1 ) ;; {
                      (pop 1 ) ;; }
                    (push 1 ) ;; {
                      (declare-fun v467 () Address )
                      (assert true )
                      (declare-fun pv_net741 () UInt )
                      (assert (<= 0 pv_net741 ) )
                      (declare-fun pv_tok743 () Token )
                      (assert true )
                      (declare-fun pv_ks742 () (Array Token UInt ) )
                      (assert (<= 0 (select pv_ks742 pv_tok743 ) ) )
                      (declare-fun v744 () Address )
                      (assert true )
                      (declare-fun v745 () Address )
                      (assert true )
                      (declare-fun v746 () Address )
                      (assert true )
                      (declare-fun v747 () Address )
                      (assert true )
                      (declare-fun v468 () UInt )
                      (assert (<= 0 v468 ) )
                      (declare-fun v469 () UInt )
                      (assert (<= 0 v469 ) )
                      (declare-fun v220 () Bool )
                      (assert true )
                      (assert (= v468 (+ v431 1 ) ) )
                      (assert (>= v469 v434 ) )
                      (assert (= 0 pv_net741 ) )
                      (declare-fun v470 () Bool )
                      (assert true )
                      (assert (= v470 (= v341 v467 ) ) )
                      (assert v470 )
                      (push 1 ) ;; {
                        (declare-fun v748 () UInt )
                        (assert (<= 0 v748 ) )
                        (assert (<= v748 dlc_UInt_max ) )
                        (assert (= v748 v428 ) )
                        (declare-fun v749 () UInt )
                        (assert (<= 0 v749 ) )
                        (assert (<= v749 dlc_UInt_max ) )
                        (assert (= v749 v429 ) )
                        (declare-fun v750 () Bool )
                        (assert true )
                        (assert (= v750 false ) )
                        (declare-fun v751 () UInt )
                        (assert (<= 0 v751 ) )
                        (assert (<= v751 dlc_UInt_max ) )
                        (assert (= v751 v468 ) )
                        (declare-fun v752 () UInt )
                        (assert (<= 0 v752 ) )
                        (assert (<= v752 dlc_UInt_max ) )
                        (assert (= v752 v431 ) )
                        (declare-fun v753 () UInt )
                        (assert (<= 0 v753 ) )
                        (assert (<= v753 dlc_UInt_max ) )
                        (assert (= v753 v445 ) )
                        (declare-fun v754 () UInt )
                        (assert (<= 0 v754 ) )
                        (assert (<= v754 dlc_UInt_max ) )
                        (assert (= v754 v469 ) )
                        (declare-fun v755 () UInt )
                        (assert (<= 0 v755 ) )
                        (assert (<= v755 dlc_UInt_max ) )
                        (assert (= v755 v434 ) )
                        (declare-fun v756 () UInt )
                        (assert (<= 0 v756 ) )
                        (assert (<= v756 dlc_UInt_max ) )
                        (assert (= v756 v434 ) )
                        (declare-fun v757 () T0 )
                        (assert true )
                        (assert (= v757 v437 ) )
                        (declare-fun v758 () UInt )
                        (assert (<= 0 v758 ) )
                        (assert (<= v758 dlc_UInt_max ) )
                        (assert (= v758 v438 ) )
                        (declare-fun v759 () Bool )
                        (assert true )
                        (assert (= v759 (<= v413 v412 ) ) )
                        (push 1 ) ;; {
                          (assert (not v759 ) )
                          (check-sat-using (try-for default 10 ) )
                          ;; unsat
                          (pop 1 ) ;; }
                        (pop 1 ) ;; }
                      (pop 1 ) ;; }
                    (pop 1 ) ;; }
                  (push 1 ) ;; {
                    (declare-fun v452 () Address )
                    (assert true )
                    (declare-fun v453 () T2 )
                    (assert true )
                    (declare-fun pv_net760 () UInt )
                    (assert (<= 0 pv_net760 ) )
                    (declare-fun pv_tok762 () Token )
                    (assert true )
                    (declare-fun pv_ks761 () (Array Token UInt ) )
                    (assert (<= 0 (select pv_ks761 pv_tok762 ) ) )
                    (declare-fun v763 () Address )
                    (assert true )
                    (declare-fun v764 () Address )
                    (assert true )
                    (declare-fun v765 () Address )
                    (assert true )
                    (declare-fun v766 () Address )
                    (assert true )
                    (declare-fun v454 () UInt )
                    (assert (<= 0 v454 ) )
                    (declare-fun v455 () UInt )
                    (assert (<= 0 v455 ) )
                    (declare-fun v193 () Bool )
                    (assert true )
                    (assert (= v454 (+ v431 1 ) ) )
                    (assert (>= v455 v434 ) )
                    (declare-fun v458 () UInt )
                    (assert (<= 0 v458 ) )
                    (assert (<= v458 dlc_UInt_max ) )
                    (assert (= v458 (+ v438 v345 ) ) )
                    (assert (= v345 pv_net760 ) )
                    (declare-fun map2_4 () (Array Address T5 ) )
                    (assert (= map2_4 (store map2_3 v452 (T5_Some null ) ) ) )
                    (declare-fun v460 () Null )
                    (assert true )
                    (assert (= v460 null ) )
                    (declare-fun v461 () Null )
                    (assert true )
                    (assert (= v461 v460 ) )
                    (push 1 ) ;; {
                      (declare-fun v768 () UInt )
                      (assert (<= 0 v768 ) )
                      (assert (<= v768 dlc_UInt_max ) )
                      (assert (= v768 v428 ) )
                      (declare-fun v769 () UInt )
                      (assert (<= 0 v769 ) )
                      (assert (<= v769 dlc_UInt_max ) )
                      (assert (= v769 v429 ) )
                      (declare-fun v770 () Bool )
                      (assert true )
                      (assert (= v770 true ) )
                      (declare-fun v771 () UInt )
                      (assert (<= 0 v771 ) )
                      (assert (<= v771 dlc_UInt_max ) )
                      (assert (= v771 v454 ) )
                      (declare-fun v772 () UInt )
                      (assert (<= 0 v772 ) )
                      (assert (<= v772 dlc_UInt_max ) )
                      (assert (= v772 v431 ) )
                      (declare-fun v773 () UInt )
                      (assert (<= 0 v773 ) )
                      (assert (<= v773 dlc_UInt_max ) )
                      (assert (= v773 v445 ) )
                      (declare-fun v774 () UInt )
                      (assert (<= 0 v774 ) )
                      (assert (<= v774 dlc_UInt_max ) )
                      (assert (= v774 v455 ) )
                      (declare-fun v775 () UInt )
                      (assert (<= 0 v775 ) )
                      (assert (<= v775 dlc_UInt_max ) )
                      (assert (= v775 v434 ) )
                      (declare-fun v776 () UInt )
                      (assert (<= 0 v776 ) )
                      (assert (<= v776 dlc_UInt_max ) )
                      (assert (= v776 v434 ) )
                      (declare-fun v777 () T0 )
                      (assert true )
                      (assert (= v777 v437 ) )
                      (declare-fun v778 () UInt )
                      (assert (<= 0 v778 ) )
                      (assert (<= v778 dlc_UInt_max ) )
                      (assert (= v778 v458 ) )
                      (declare-fun v779 () Bool )
                      (assert true )
                      (assert (= v779 (<= v413 v412 ) ) )
                      (push 1 ) ;; {
                        (assert (not v779 ) )
                        (check-sat-using (try-for default 10 ) )
                        ;; unsat
                        (pop 1 ) ;; }
                      (pop 1 ) ;; }
                    (pop 1 ) ;; }
                  (pop 1 ) ;; }
                (push 1 ) ;; {
                  (declare-fun map0_3 () (Array Address T5 ) )
                  (declare-fun map1_3 () (Array Address T5 ) )
                  (declare-fun map2_3 () (Array Address T5 ) )
                  (declare-fun v428 () UInt )
                  (assert (<= 0 v428 ) )
                  (assert (<= v428 dlc_UInt_max ) )
                  (declare-fun v429 () UInt )
                  (assert (<= 0 v429 ) )
                  (assert (<= v429 dlc_UInt_max ) )
                  (declare-fun v430 () Bool )
                  (assert true )
                  (declare-fun v431 () UInt )
                  (assert (<= 0 v431 ) )
                  (assert (<= v431 dlc_UInt_max ) )
                  (declare-fun v432 () UInt )
                  (assert (<= 0 v432 ) )
                  (assert (<= v432 dlc_UInt_max ) )
                  (declare-fun v433 () UInt )
                  (assert (<= 0 v433 ) )
                  (assert (<= v433 dlc_UInt_max ) )
                  (declare-fun v434 () UInt )
                  (assert (<= 0 v434 ) )
                  (assert (<= v434 dlc_UInt_max ) )
                  (declare-fun v435 () UInt )
                  (assert (<= 0 v435 ) )
                  (assert (<= v435 dlc_UInt_max ) )
                  (declare-fun v436 () UInt )
                  (assert (<= 0 v436 ) )
                  (assert (<= v436 dlc_UInt_max ) )
                  (declare-fun v437 () T0 )
                  (assert true )
                  (declare-fun v438 () UInt )
                  (assert (<= 0 v438 ) )
                  (assert (<= v438 dlc_UInt_max ) )
                  (declare-fun v439 () Bool )
                  (assert true )
                  (assert (= v439 (<= v413 v412 ) ) )
                  (assert v439 )
                  (assert (not v430 ) )
                  (declare-fun v474 () UInt )
                  (assert (<= 0 v474 ) )
                  (assert (<= v474 dlc_UInt_max ) )
                  (assert (= v474 (+ v431 v346 ) ) )
                  (push 1 ) ;; {
                    (pop 1 ) ;; }
                  (push 1 ) ;; {
                    (declare-fun v479 () Address )
                    (assert true )
                    (declare-fun pv_net783 () UInt )
                    (assert (<= 0 pv_net783 ) )
                    (declare-fun pv_tok785 () Token )
                    (assert true )
                    (declare-fun pv_ks784 () (Array Token UInt ) )
                    (assert (<= 0 (select pv_ks784 pv_tok785 ) ) )
                    (declare-fun v786 () Address )
                    (assert true )
                    (declare-fun v787 () Address )
                    (assert true )
                    (declare-fun v788 () Address )
                    (assert true )
                    (declare-fun v789 () Address )
                    (assert true )
                    (declare-fun v480 () UInt )
                    (assert (<= 0 v480 ) )
                    (declare-fun v481 () UInt )
                    (assert (<= 0 v481 ) )
                    (declare-fun v238 () Bool )
                    (assert true )
                    (assert (= v480 (+ v431 1 ) ) )
                    (assert (>= v481 v434 ) )
                    (assert (= 0 pv_net783 ) )
                    (declare-fun v482 () Bool )
                    (assert true )
                    (assert (= v482 (= v341 v479 ) ) )
                    (assert v482 )
                    (push 1 ) ;; {
                      (pop 1 ) ;; }
                    (push 1 ) ;; {
                      (declare-fun v483 () Address )
                      (assert true )
                      (declare-fun pv_net790 () UInt )
                      (assert (<= 0 pv_net790 ) )
                      (declare-fun pv_tok792 () Token )
                      (assert true )
                      (declare-fun pv_ks791 () (Array Token UInt ) )
                      (assert (<= 0 (select pv_ks791 pv_tok792 ) ) )
                      (declare-fun v793 () Address )
                      (assert true )
                      (declare-fun v794 () Address )
                      (assert true )
                      (declare-fun v795 () Address )
                      (assert true )
                      (declare-fun v796 () Address )
                      (assert true )
                      (declare-fun v484 () UInt )
                      (assert (<= 0 v484 ) )
                      (declare-fun v485 () UInt )
                      (assert (<= 0 v485 ) )
                      (declare-fun v243 () Bool )
                      (assert true )
                      (assert (= v484 (+ v480 1 ) ) )
                      (assert (>= v485 v481 ) )
                      (assert (= 0 pv_net790 ) )
                      (declare-fun v486 () Bool )
                      (assert true )
                      (assert (= v486 (= v341 v483 ) ) )
                      (assert v486 )
                      (declare-fun v487 () T4 )
                      (assert (T4_inv v487 ) )
                      (assert (= v487 (T4_Payment null ) ) )
                      (push 1 ) ;; {
                        (pop 1 ) ;; }
                      (push 1 ) ;; {
                        (declare-fun v497 () Address )
                        (assert true )
                        (declare-fun v498 () T2 )
                        (assert true )
                        (declare-fun pv_net797 () UInt )
                        (assert (<= 0 pv_net797 ) )
                        (declare-fun pv_tok799 () Token )
                        (assert true )
                        (declare-fun pv_ks798 () (Array Token UInt ) )
                        (assert (<= 0 (select pv_ks798 pv_tok799 ) ) )
                        (declare-fun v800 () Address )
                        (assert true )
                        (declare-fun v801 () Address )
                        (assert true )
                        (declare-fun v802 () Address )
                        (assert true )
                        (declare-fun v803 () Address )
                        (assert true )
                        (declare-fun v499 () UInt )
                        (assert (<= 0 v499 ) )
                        (declare-fun v500 () UInt )
                        (assert (<= 0 v500 ) )
                        (declare-fun v267 () Bool )
                        (assert true )
                        (assert (= v499 (+ v484 1 ) ) )
                        (assert (>= v500 v485 ) )
                        (assert (= 0 pv_net797 ) )
                        (declare-fun v503 () Bool )
                        (assert true )
                        (assert (= v503 (<= v438 v438 ) ) )
                        (push 1 ) ;; {
                          (assert (not v503 ) )
                          (check-sat-using (try-for default 10 ) )
                          ;; unsat
                          (pop 1 ) ;; }
                        (assert v503 )
                        (declare-fun v505 () UInt )
                        (assert (<= 0 v505 ) )
                        (assert (<= v505 dlc_UInt_max ) )
                        (assert (= v505 (- v438 v438 ) ) )
                        (declare-fun map1_4 () (Array Address T5 ) )
                        (assert (= map1_4 (store map1_3 v497 (T5_Some null ) ) ) )
                        (declare-fun v507 () Null )
                        (assert true )
                        (assert (= v507 null ) )
                        (declare-fun v508 () Null )
                        (assert true )
                        (assert (= v508 v507 ) )
                        (declare-fun v512 () UInt )
                        (assert (<= 0 v512 ) )
                        (assert (<= v512 dlc_UInt_max ) )
                        (assert (= v512 (+ v413 1 ) ) )
                        (declare-fun v513 () UInt )
                        (assert (<= 0 v513 ) )
                        (assert (<= v513 dlc_UInt_max ) )
                        (assert (= v513 (+ v412 1 ) ) )
                        (push 1 ) ;; {
                          (declare-fun v805 () UInt )
                          (assert (<= 0 v805 ) )
                          (assert (<= v805 dlc_UInt_max ) )
                          (assert (= v805 v513 ) )
                          (declare-fun v806 () UInt )
                          (assert (<= 0 v806 ) )
                          (assert (<= v806 dlc_UInt_max ) )
                          (assert (= v806 v512 ) )
                          (declare-fun v807 () UInt )
                          (assert (<= 0 v807 ) )
                          (assert (<= v807 dlc_UInt_max ) )
                          (assert (= v807 v499 ) )
                          (declare-fun v808 () UInt )
                          (assert (<= 0 v808 ) )
                          (assert (<= v808 dlc_UInt_max ) )
                          (assert (= v808 v484 ) )
                          (declare-fun v809 () UInt )
                          (assert (<= 0 v809 ) )
                          (assert (<= v809 dlc_UInt_max ) )
                          (assert (= v809 v484 ) )
                          (declare-fun v810 () UInt )
                          (assert (<= 0 v810 ) )
                          (assert (<= v810 dlc_UInt_max ) )
                          (assert (= v810 v500 ) )
                          (declare-fun v811 () UInt )
                          (assert (<= 0 v811 ) )
                          (assert (<= v811 dlc_UInt_max ) )
                          (assert (= v811 v485 ) )
                          (declare-fun v812 () UInt )
                          (assert (<= 0 v812 ) )
                          (assert (<= v812 dlc_UInt_max ) )
                          (assert (= v812 v485 ) )
                          (declare-fun v813 () T0 )
                          (assert true )
                          (assert (= v813 v437 ) )
                          (declare-fun v814 () UInt )
                          (assert (<= 0 v814 ) )
                          (assert (<= v814 dlc_UInt_max ) )
                          (assert (= v814 v505 ) )
                          (declare-fun v815 () Bool )
                          (assert true )
                          (assert (= v815 (<= v806 v805 ) ) )
                          (push 1 ) ;; {
                            (assert (not v815 ) )
                            (check-sat-using (try-for default 10 ) )
                            ;; unsat
                            (pop 1 ) ;; }
                          (pop 1 ) ;; }
                        (pop 1 ) ;; }
                      (pop 1 ) ;; }
                    (pop 1 ) ;; }
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun map0_2 () (Array Address T5 ) )
              (declare-fun map1_2 () (Array Address T5 ) )
              (declare-fun map2_2 () (Array Address T5 ) )
              (declare-fun v412 () UInt )
              (assert (<= 0 v412 ) )
              (assert (<= v412 dlc_UInt_max ) )
              (declare-fun v413 () UInt )
              (assert (<= 0 v413 ) )
              (assert (<= v413 dlc_UInt_max ) )
              (declare-fun v414 () UInt )
              (assert (<= 0 v414 ) )
              (assert (<= v414 dlc_UInt_max ) )
              (declare-fun v415 () UInt )
              (assert (<= 0 v415 ) )
              (assert (<= v415 dlc_UInt_max ) )
              (declare-fun v416 () UInt )
              (assert (<= 0 v416 ) )
              (assert (<= v416 dlc_UInt_max ) )
              (declare-fun v417 () UInt )
              (assert (<= 0 v417 ) )
              (assert (<= v417 dlc_UInt_max ) )
              (declare-fun v418 () UInt )
              (assert (<= 0 v418 ) )
              (assert (<= v418 dlc_UInt_max ) )
              (declare-fun v419 () UInt )
              (assert (<= 0 v419 ) )
              (assert (<= v419 dlc_UInt_max ) )
              (declare-fun v420 () T0 )
              (assert true )
              (declare-fun v421 () UInt )
              (assert (<= 0 v421 ) )
              (assert (<= v421 dlc_UInt_max ) )
              (declare-fun v422 () Bool )
              (assert true )
              (assert (= v422 (<= v413 v412 ) ) )
              (assert v422 )
              (assert (not true ) )
              (push 1 ) ;; {
                (pop 1 ) ;; }
              (push 1 ) ;; {
                (declare-fun v514 () Address )
                (assert true )
                (declare-fun pv_net819 () UInt )
                (assert (<= 0 pv_net819 ) )
                (declare-fun pv_tok821 () Token )
                (assert true )
                (declare-fun pv_ks820 () (Array Token UInt ) )
                (assert (<= 0 (select pv_ks820 pv_tok821 ) ) )
                (declare-fun v822 () Address )
                (assert true )
                (declare-fun v823 () Address )
                (assert true )
                (declare-fun v824 () Address )
                (assert true )
                (declare-fun v825 () Address )
                (assert true )
                (declare-fun v515 () UInt )
                (assert (<= 0 v515 ) )
                (declare-fun v516 () UInt )
                (assert (<= 0 v516 ) )
                (declare-fun v286 () Bool )
                (assert true )
                (assert (= v515 (+ v414 1 ) ) )
                (assert (>= v516 v417 ) )
                (assert (= 0 pv_net819 ) )
                (declare-fun v517 () Bool )
                (assert true )
                (assert (= v517 (= v341 v514 ) ) )
                (assert v517 )
                (declare-fun v518 () T4 )
                (assert (T4_inv v518 ) )
                (assert (= v518 (T4_Finished null ) ) )
                (declare-fun v520 () Bool )
                (assert true )
                (assert (= v520 (= 0 v421 ) ) )
                (push 1 ) ;; {
                  (assert (not v520 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (assert v520 )
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (pop 1 ) ;; }
          (pop 1 ) ;; }
        (pop 1 ) ;; }
      (pop 1 ) ;; }
    (pop 1 ) ;; }
  (pop 1 ) ;; }
(exit )
